C51 COMPILER V9.60.0.0   BUZZER                                                            06/20/2022 01:08:16 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE BUZZER
OBJECT MODULE PLACED IN .\Objects\buzzer.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE buzzer.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\bu
                    -zzer.lst) TABS(2) OBJECT(.\Objects\buzzer.obj)

line level    source

   1          #include<reg51.h>
   2          sbit read = P3^0; //read pin of ADC connected to pin 3.0
   3          sbit write = P3^1; //write pin of ADC connected to pin 3.1
   4          sbit intr = P3^2; //interpt pin of ADC connected to pin 3.2
   5          sbit rs = P3^6; //RS pin of LCD
   6          sbit en = P3^7; //enable pin of LC
   7          sbit speaker = P3^4; //speaker
   8          sfr l_data=0xA0;
   9          unsigned char temperature;
  10           // declaraing functions
  11          void delay(unsigned int); //Function of creating Delays
  12          void writecmd(int); //Function that sends commands to LCD
  13          void writedata(char); //Function that writes data to LCD
  14          void convert(unsigned char); //Function that converts the Integer value to char and display it on LCD
  15          void SetTimer(int,int); //Function that set the TH0 and TL0 values
  16          void Init(void); //Function that initializes the timer values
  17          void StartTimer(void); //Fnction that starts Timer 0
  18          void StopTimer(void); //Function to Stop Timer 0
  19          void Ext0(void); //Function that is called after the ADC is done with conversion
  20          void lcdinit(void); //function to give commands to lcd
  21           // defining the functions
  22          
  23           void delay(unsigned int time)
  24           {
  25   1       unsigned int i,j;
  26   1       for(i=0;i<time;i++)
  27   1       for(j=0;j<125;j++);
  28   1       }
  29          
  30           void writecmd(int z)
  31           {
  32   1       rs = 0; // This is command
  33   1       l_data = z; //Data transfer
  34   1       en = 1; // => E = 1
  35   1       delay(150);
  36   1       en = 0; // => E = 0
  37   1       delay(150);
  38   1       }
  39          
  40           void writedata(char t)
  41           {
  42   1       rs = 1; // This is data
  43   1       l_data = t; //Data transfer
  44   1       en = 1; // => E = 1
  45   1       delay(150);
  46   1       en = 0; // => E = 0
  47   1       delay(150);
  48   1       }
  49          
  50           void timer0() interrupt 1
  51           { if(speaker ) //if the Speaker is ON
  52   1       { speaker = 0; //Turn it OFF
  53   2       SetTimer(0xFB,0x1D); //Set Delay to 1.25msec
  54   2       }
C51 COMPILER V9.60.0.0   BUZZER                                                            06/20/2022 01:08:16 PAGE 2   

  55   1       else //if the Speaker is OFF
  56   1       { speaker = 1; //Turn it ON
  57   2       SetTimer(0xF1,0x59); //Set the delay to 3.75msec
  58   2       }
  59   1      
  60   1       }
  61          void SetTimer(int xx, int yy)
  62           { TH0 = xx; //Set the value of TH0 to xx
  63   1       TL0 = yy; //Set the value of TL0 to yy
  64   1       }
  65          
  66          void Init()
  67           { TMOD = 0x1; //Timer 0 is Mode 1
  68   1       EA = 1; //Enable Global interrupt
  69   1       ET0 = 1; //Enable timer overflow interrupt for timer 0
  70   1       SetTimer(0xF1,0x359); //Set the values of TH0 and TL0 for a delay of 3.75ms
  71   1       }
  72          
  73          void StartTimer()
  74           { TR0 = 1; //Start Timer 0;
  75   1       }
  76          void StopTimer()
  77           {
  78   1       TR0 = 0; //Stop Timer 0
  79   1       }
  80          void Ext0()
  81           {
  82   1       read = 0; //Set the RD pin of ADC from HIGH to LOW //The ADC sends the converted value to P1
  83   1       temperature = P1; //Store the value at P1 in temperature
  84   1       convert(temperature); //Display temperature on LCD
  85   1       if(temperature<10 || temperature>25) //If the is less than 10 or it is greater than 25
  86   1       { speaker = 1; //Turn the speaker ON
  87   2       StartTimer(); //Start the Timer
  88   2       }
  89   1       else //if the temperature is in-between 10 and 36
  90   1       { if(TR0 == 1) //if the Timer 0 is satarted
  91   2       { StopTimer(); //stop the timer
  92   3       SetTimer(0xF1,0x59); //Set a delay of 3.75ms
  93   3       }
  94   2       speaker = 0; //Turn the Speaker OFF
  95   2       }
  96   1       }
  97           void convert(unsigned char value)
  98           { writecmd(0xc6); //command to set the cursor to 6th position of 2nd line on 16*2 lcd
  99   1       writedata(((value/100)+48)); //Convert the hundredth place int to char and display on LCD
 100   1       writedata((((value/10)%10)+48)); //Convert the tenth place int to char and display on LCD
 101   1       writedata(((value%10)+48)); //Convert the unit place int to char and display on LCD
 102   1       writedata(0xDF); //Hex value for displaying the Degree sign
 103   1       writedata('C'); //Write C to LCD
 104   1       }
 105          
 106          void lcdinit(void)
 107          {
 108   1       writecmd(0x38);
 109   1       writecmd(0x01);
 110   1       writecmd(0x06);
 111   1       writecmd(0x0C);
 112   1       writecmd(0x82);
 113   1      }
 114          //main program
 115          void main()
 116          {
C51 COMPILER V9.60.0.0   BUZZER                                                            06/20/2022 01:08:16 PAGE 3   

 117   1       speaker = 0; //Turn the Speaker OFF
 118   1       P1 = 0xFF; //Set P1 as an input Port
 119   1       intr = 1; //Set P3.2 as an input pin
 120   1       lcdinit();
 121   1       writedata('T');
 122   1       writedata('e');
 123   1       writedata('m');
 124   1       writedata('p');
 125   1       writedata('e');
 126   1       writedata('r');
 127   1       writedata('a');
 128   1       writedata('t');
 129   1       writedata('u');
 130   1       writedata('r');
 131   1       writedata('e');
 132   1       writedata(':');
 133   1      
 134   1       Init();
 135   1       while (1)
 136   1       { read = 1; //Set the RD pi
 137   2       write = 0; //WR = Low
 138   2       write = 1; //Low
 139   2       while(intr==1); //Wait for the ADC to Convert the given voltage
 140   2       Ext0(); //Call the Ext0 function
 141   2       }
 142   1       } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    403    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
